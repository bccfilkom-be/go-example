// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package postgresql

import (
	"context"
)

const createPet = `-- name: CreatePet :one
INSERT INTO
  books (title) VALUES ($1) RETURNING id
`

func (q *Queries) CreatePet(ctx context.Context, title string) (int64, error) {
	row := q.db.QueryRow(ctx, createPet, title)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const listBooks = `-- name: ListBooks :many
SELECT
  id, title, created_at, updated_at
FROM
  books
`

func (q *Queries) ListBooks(ctx context.Context) ([]Book, error) {
	rows, err := q.db.Query(ctx, listBooks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Book
	for rows.Next() {
		var i Book
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
